import * as React from "react";

const SvgComponent = (props) => {
  const w = Math.ceil(props.width) || 220;
  return (
    <svg
      {...props}
      width={w + 5}
      height={13}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d={`M5 8.8c${Math.round((135 / 220) * props.width)}-2 ${Math.round(
          (180 / 220) * props.width
        )} 1.55 ${Math.round((210 / 220) * props.width)}-4`}
        stroke={props.stroke || "#0BBDFF"}
        strokeWidth={8}
        strokeLinecap="round"
        strokeDasharray={Math.ceil(props.width)}
        strokeDashoffset={0 /*Math.ceil(props.width)*/}
      >
        <animate
          attributeName="stroke-dashoffset"
          values={`${w};0;0;${-w}`}
          dur="3s"
          repeatCount="indefinite"
        />
      </path>
    </svg>
  );
};

export default SvgComponent;

/*

<animate
        attributeType="CSS"
        attributeName="opacity"
        from="1"
        to="0"
        dur="1s"
        repeatCount="indefinite"
      ></animate>

 * Generated by SVG Artista on 2/28/2023, 3:31:04 PM
 * MIT license (https://opensource.org/licenses/MIT)
 * W. https://svgartista.net

@-webkit-keyframes animate-svg-stroke-1 {
  0% {
    stroke-dashoffset: 211.5077667236328px;
    stroke-dasharray: 211.5077667236328px;
  }

  100% {
    stroke-dashoffset: 0;
    stroke-dasharray: 211.5077667236328px;
  }
}

@keyframes animate-svg-stroke-1 {
  0% {
    stroke-dashoffset: 211.5077667236328px;
    stroke-dasharray: 211.5077667236328px;
  }

  100% {
    stroke-dashoffset: 0;
    stroke-dasharray: 211.5077667236328px;
  }
}

.svg-elem-1 {
  -webkit-animation: animate-svg-stroke-1 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0s both;
          animation: animate-svg-stroke-1 1s cubic-bezier(0.47, 0, 0.745, 0.715) 0s both;
}

*/
